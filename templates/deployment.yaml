{{- if semverCompare "^1.9-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
{{ (include "traefik.labels" .) | indent 4 }}
spec:
  replicas: {{ default 1 .Values.deployment.replicas }}
  selector:
    matchLabels:
      "app.kubernetes.io/name": {{ template "traefik.name" . }}
      "app.kubernetes.io/instance": {{ .Release.Name | quote }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- with .Values.rollingUpdate }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        "app.kubernetes.io/name": {{ template "traefik.name" . }}
        "app.kubernetes.io/instance": {{ .Release.Name | quote }}
    spec:
      serviceAccountName: {{ template "traefik.fullname" . }}
      terminationGracePeriodSeconds: 60
      containers:
      - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        name: {{ template "traefik.fullname" . }}
        resources:
          {{- with .Values.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: /ping
            port: {{ .Values.ports.traefik.port }}
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: {{ .Values.ports.traefik.port }}
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        {{- range $name, $config := .Values.ports }}
        - name: {{ $name | quote }}
          containerPort: {{ $config.port }}
          protocol: TCP
        {{- end }}
        args:
          {{- range $name, $config := .Values.ports }}
          - "--entryPoints.{{$name}}.address=:{{ $config.port }}"
          {{- end }}
          {{- if .Values.dashboard.enabled }}
          - "--api.dashboard=true"
          {{- end }}
          - "--ping=true"
          - "--providers.kubernetescrd"
          - "--log.level={{ .Values.logs.loglevel }}"
          {{- if .Values.metrics.prometheus }}
          {{- if .Values.metrics.prometheus.enabled }}
          - "--metrics.prometheus=true"
          - "--metrics.prometheus.entryPoint=traefik"
          {{- end }}
          {{- end }}
