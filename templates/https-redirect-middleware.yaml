{{- if and .Values.middlewares.httpsRedirect .Values.middlewares.httpsRedirect.enabled }}
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ .Values.middlewares.httpsRedirect.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "traefik.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
  annotations:
    helm.sh/hook: "post-install"
spec:
  redirectScheme:
    permanent: true
    scheme: https
---
{{- if and .Values.middlewares.httpsRedirect.ingressRoute .Values.middlewares.httpsRedirect.ingressRoute.enabled }}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: https-ingress-route-redirect
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: "post-install"
  labels:
    app: {{ template "traefik.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  entryPoints:
  - web
  routes:
  - match: HostRegexp(`{{ .Values.domain }}`, `{subdomain:[a-z]+}.{{ .Values.domain }}`)
    kind: Rule
    # This doesn't matter since the redirection keeps this IngressRoute from actually routing the request
    services:
    - name: {{ template "traefik.fullname" . }}
      port: 443
    middlewares:
    - name: {{ .Values.middlewares.httpsRedirect.name }}
      namespace: {{ .Release.Namespace }}
{{- end }} # if and .Values.middlewares.httpsRedirect.ingressRoute .Values.middlewares.httpsRedirect.ingressRoute.enabled
{{- end }} # if and .Values.middlewares.httpsRedirect .Values.middlewares.httpsRedirect.enabled
